<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
		
	<context:property-placeholder location="classpath:database.properties" />
	<bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- especifica propiedades del data source -->
		<!-- Nombre de la clase del driver -->
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<!-- url de la database -->
		<property name="url" value="${jdbc.url}"></property>
		<!-- credenciales de sesion -->
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	
	
	<!-- Creamos el session Factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- toma las propiedades de la clase Localsessionfactory -->
		<property name="dataSource" ref="datasource"></property>
		<property name="mappingResources">
		<list>
			<value>co/edu/udea/iw/mapping/Ciudad.hbm.xml</value>
			<value>co/edu/udea/iw/mapping/Cliente.hbm.xml</value>
			<value>co/edu/udea/iw/mapping/Direccion.hbm.xml</value>
			<value>co/edu/udea/iw/mapping/Rol.hbm.xml</value>
			<value>co/edu/udea/iw/mapping/Usuario.hbm.xml</value>
		</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hiberante.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- mostrar o no mostrar el comando sql ejecuta en la terminal -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- config si se valida logica de negocio o no -->
				<prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
		<property name="dataSource" ref="datasource"></property>
	</bean>
	
	<bean id="ciudadDao" class="co.edu.udea.iw.dao.hibernate.CiudadDaoHibernate">
	<!-- inyeccion de sessionFactory a ciudadDao -->
	<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="clienteDao" class="co.edu.udea.iw.dao.hibernate.ClienteDaoHibernate">
	<!-- inyeccion de sessionFactory a ciudadDao -->
	<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="usuarioDao" class="co.edu.udea.iw.dao.hibernate.UsuarioDaoHibernate">
	<property name="sessionFactory" ref="sessionFactory"></property>
	
	</bean>
	
	<bean id="usuarioBl" class="co.edu.udea.iw.bl.imp.UsuarioBlImp">
		<property name="usuarioDao" ref="usuarioDao"></property>
	</bean>
	
	<!-- id no debe ser igual a la clase. name debe ser del parametro del constructor -->
	<bean id="clienteBl" class="co.edu.udea.iw.bl.imp.ClienteBlImp">
		<constructor-arg name="clienteDao" ref="clienteDao"></constructor-arg>
		<constructor-arg name="usuarioDao" ref="usuarioDao"></constructor-arg>
	</bean>
	
	<!-- Vaya escanee carpeta que alla hay elementos candidatos a inyectar 
	va al base-package y busca clases anotadas con @Component-->
	<context:component-scan base-package="co.udea.edu.iw.ws"></context:component-scan>

</beans>
